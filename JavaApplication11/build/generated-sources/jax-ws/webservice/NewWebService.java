
package webservice;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.6-1b01 
 * Generated source version: 2.2
 * 
 */
@WebService(name = "NewWebService", targetNamespace = "http://webService/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface NewWebService {


    /**
     * 
     * @param tempId
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "Template")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "Template", targetNamespace = "http://webService/", className = "webservice.Template")
    @ResponseWrapper(localName = "TemplateResponse", targetNamespace = "http://webService/", className = "webservice.TemplateResponse")
    @Action(input = "http://webService/NewWebService/TemplateRequest", output = "http://webService/NewWebService/TemplateResponse")
    public String template(
        @WebParam(name = "tempId", targetNamespace = "")
        int tempId);

    /**
     * 
     * @param name
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "hello", targetNamespace = "http://webService/", className = "webservice.Hello")
    @ResponseWrapper(localName = "helloResponse", targetNamespace = "http://webService/", className = "webservice.HelloResponse")
    @Action(input = "http://webService/NewWebService/helloRequest", output = "http://webService/NewWebService/helloResponse")
    public String hello(
        @WebParam(name = "name", targetNamespace = "")
        String name);

    /**
     * 
     * @param id
     * @return
     *     returns java.lang.String
     * @throws IOException_Exception
     * @throws JSONException_Exception
     */
    @WebMethod(operationName = "Features")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "Features", targetNamespace = "http://webService/", className = "webservice.Features")
    @ResponseWrapper(localName = "FeaturesResponse", targetNamespace = "http://webService/", className = "webservice.FeaturesResponse")
    @Action(input = "http://webService/NewWebService/FeaturesRequest", output = "http://webService/NewWebService/FeaturesResponse", fault = {
        @FaultAction(className = JSONException_Exception.class, value = "http://webService/NewWebService/Features/Fault/JSONException"),
        @FaultAction(className = IOException_Exception.class, value = "http://webService/NewWebService/Features/Fault/IOException")
    })
    public String features(
        @WebParam(name = "id", targetNamespace = "")
        int id)
        throws IOException_Exception, JSONException_Exception
    ;

}
